user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##

	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##
	
	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	# include /etc/nginx/sites-enabled/*; ##### Commented out #####

    ##### Reverse Proxy to Galaxy #####
    upstream galaxy_app {
        server localhost:8888;
    }

    server {
	
	listen localhost:80;	

	client_max_body_size 10G;
        # ... other server stuff ...
	

	location / {
	    
	    ##### Insert to enable CORS #####
		
	    ##### This configuration file is adapted from #####
	    ##### http://enable-cors.org/server_nginx.html #####
	    
	    ##### See the website for in-depth comments #####


	
	    ##### THIS IS INSECURE! #####
	
	    ##### BE SURE TO USE A REGEX IN PRODUCTION #####
	
	    # if ($http_origin ~* (https?://[^/]*\.mckinsey\.com(:[0-9]+)?)$) { ##### Commented out #####
	        set $cors "true";
	    # } ##### Commented out #####
	




	
	    # OPTIONS indicates a CORS pre-flight request
	    if ($request_method = 'OPTIONS') {
	        set $cors "${cors}options";  
	    }
	
	    # non-OPTIONS indicates a normal CORS request
	    if ($request_method = 'GET') {
	        set $cors "${cors}get";  
	    }
	    if ($request_method = 'POST') {
	        set $cors "${cors}post";
	    }
	
	    # if it's a GET or POST, set the standard CORS responses header
	    if ($cors = "trueget") {
	        add_header 'Access-Control-Allow-Origin' "$http_origin";
	        add_header 'Access-Control-Allow-Credentials' 'true';
	    }
	
	    if ($cors = "truepost") {
	        add_header 'Access-Control-Allow-Origin' "$http_origin";
	        add_header 'Access-Control-Allow-Credentials' 'true';
	    }
	
	    # if it's OPTIONS, then it's a CORS preflight request so respond immediately with no response body
	    if ($cors = "trueoptions") {
	        add_header 'Access-Control-Allow-Origin' "$http_origin";
	        add_header 'Access-Control-Allow-Credentials' 'true';
	
	        #
	        # Return special preflight info
	        #
	        
	        # Tell browser to cache this pre-flight info for 20 days
	        add_header 'Access-Control-Max-Age' 1728000;
	
	        # Tell browser we respond to GET,POST,OPTIONS in normal CORS requests.
	        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	        
	        # Tell browser we accept these headers in the actual request
	        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
	
	        # build entire response to the preflight request
	        # no body in this response
	        add_header 'Content-Length' 0;
	        # (should not be necessary, but included for non-conforming browsers)
	        add_header 'Content-Type' 'text/plain charset=UTF-8';
	        # indicate successful return with no content
	        return 204;
   	    }
    	proxy_pass   http://galaxy_app;
    	proxy_set_header   X-Forwarded-Host $host;
    	proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	}
    }
}
